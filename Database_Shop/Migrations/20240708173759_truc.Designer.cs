// <auto-generated />
using System;
using API_Shop.DB.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database_Shop.Migrations
{
    [DbContext(typeof(ShopDB))]
    [Migration("20240708173759_truc")]
    partial class truc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("API_Shop.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdUser")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PostalCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("API_Shop.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MdpConfirm")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Database_Shop.Entity.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Promo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Database_Shop.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArticleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Baby")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Bakery")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Canned")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Dairy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Drink")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Frozen")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Fruit")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Meat")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Snack")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Vegetable")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Database_Shop.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id_User")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SendAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("API_Shop.Models.User", b =>
                {
                    b.HasOne("API_Shop.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Database_Shop.Entity.Article", b =>
                {
                    b.HasOne("Database_Shop.Entity.Order", null)
                        .WithMany("Articles")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Database_Shop.Entity.Category", b =>
                {
                    b.HasOne("Database_Shop.Entity.Article", null)
                        .WithMany("Categories")
                        .HasForeignKey("ArticleId");
                });

            modelBuilder.Entity("Database_Shop.Entity.Article", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Database_Shop.Entity.Order", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
